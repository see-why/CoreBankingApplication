@model CBA.Core.ViewModels.FindLoanAccountView

@{
    ViewBag.Title = "Find Loan Account";
    var foundLoanAccounts = ViewBag.foundLoanAccounts as IEnumerable<CBA.Core.LoanAccount>;
    var loanAccount = new CBA.Core.LoanAccount();
}

<h2>Find Loan Account</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-inline">
        <h4>Search by Account Number or Name</h4>
        <hr />
        @Html.ValidationSummary(false)
        <div class="form-group">
            @*@Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })*@
            @*<span class="input-group-addon" data-currency-iso="NGN">&#8358;</span>*@
            @Html.TextBoxFor(model => model.AccountNumber, new { @class = "form-control", placeholder = "Account Number" })

        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })*@
            @Html.TextBoxFor(model => model.AccountName, new { @class = "form-control", placeholder = "Account Name" })
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.AccountNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountNumber)
                @Html.ValidationMessageFor(model => model.AccountNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountName)
                @Html.ValidationMessageFor(model => model.AccountName)
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<hr />
<table class="table table-striped table-bordered table-condensed">
    <tr>
        <th>
            @Html.DisplayNameFor(x => loanAccount.Name)
        </th>
        <th>
            @Html.DisplayNameFor(x => loanAccount.AccountNumber)
        </th>
        <th>
            @Html.DisplayNameFor(x => loanAccount.RepaymentInterval)
        </th>
        <th>
            @Html.DisplayNameFor(x => loanAccount.PrincipalAmount) (<span data-currency-iso="NGN">&#8358;</span>)
        </th>
        <th>
            @Html.DisplayNameFor(x => loanAccount.InstallmentAmount) (<span data-currency-iso="NGN">&#8358;</span>)
        </th>
        <th>
            @Html.DisplayNameFor(x => loanAccount.AmountRepaid) (<span data-currency-iso="NGN">&#8358;</span>)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AccumulatedInterest)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => loanAccount.Branch)
        </th>
        <th></th>
    </tr>

    @foreach (var item in foundLoanAccounts)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AccountNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RepaymentInterval)
            </td>
            <td>
                @(item.PrincipalAmount.ToString("#,##0.00;(#,##0.00))"))
            </td>
            <td>
                @(item.InstallmentAmount.ToString("#,##0.00;(#,##0.00))"))
            </td>
            <td>
                @(item.AmountRepaid.ToString("#,##0.00;(#,##0.00))"))
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccumulatedInterest)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Branch.Name)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditLoanAccount", new { id = item.ID }) 
                @*@Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })*@
            </td>
        </tr>
    }

</table>

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
