@model CBA.Core.ViewModels.AddCustomerAccountView

@{
    ViewBag.Title = "AddCustomerAccount";
    var customer = ViewBag.Customer as CBA.Core.Customer;
}

<h2>Add Customer Account</h2>



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <fieldset>
    <legend>Customer Information </legend>
        @if (customer != null)
        {
    <div class="row">
        
            <div class="col-md-4">
                @("Customer ID :")
                @(customer.CustomerID.ToString("D6"))
            </div>
            <div class="col-md-4">
                @("First Name :")
                @(customer.FirstName)
            </div>
            <div class="col-md-4">
                @("Last Name :")
                @(customer.LastName)
            </div>
            
        
        @*@Html.LabelFor(model => model.CustomerID, new { @class = "control-label col-md-2" })*@
        
    </div>
    <div class="row">
        <div class="col-md-4">
            @("Phone Number :")
            @(customer.PhoneNumber)
        </div>
        <div class="col-md-4">
            @("Gender :")
            @(customer.Gender.Name)
        </div>
    </div>
        }
</fieldset>
    <div class="form-horizontal">
        @*<h4>Add Customer Account</h4>*@
        <hr />
        
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.CustomerID)        
        <fieldset>
            <legend>Account Information</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.AccountName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.AccountName, new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.AccountName)*@
                    @Html.ValidationMessageFor(model => model.AccountName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AccountType, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.AccountType, ViewBag.AccountTypes as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AccountType)
                </div>
            </div>
            @*<div class="form-group">
            @Html.LabelFor(model => model.AccountType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountType)
                @Html.ValidationMessageFor(model => model.AccountType)
            </div>
        </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.BranchID, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.BranchID, ViewBag.AllBranches as SelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BranchID)
                </div>
            </div>

            @*<div class="form-group">
            @Html.LabelFor(model => model.BranchID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BranchID)
                @Html.ValidationMessageFor(model => model.BranchID)
            </div>
        </div>*@
        </fieldset>
        

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
